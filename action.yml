name: Code Coverage with reviewdog
description: Warns of lines of code not covered by the test.
branding:
  icon: code
  color: blue
inputs:
  fail_level:
    description: |
      Unless none, exit code 1 for reviewdog if it finds at least 1 issue with severity greater than or equal to the
      given level [info,warning,error]
    default: "none"
  filter_mode:
    description: |
      Filtering mode for the reviewdog command [added,diff_context,file,nofilter]
    default: "added"
  github_token:
    description: "GITHUB_TOKEN"
    default: "${{ github.token }}"
    required: false
  lcov_path:
    description: Lcov files path. Support for glob pattern.
    required: true
  reporter:
    description: |
      Reporter of reviewdog command [github-check,github-pr-check,github-pr-review].
      Default is `github-pr-review`.
    default: "github-pr-review"
    required: false
  tool_name:
    description: "Tool name to use for reviewdog reporter"
    default: "code-coverage"
    required: false
  delete_previous_comments:
    description: "Delete previous comments made by the same tool."
    default: "true"
    required: false

runs:
  using: composite
  steps:
    - uses: reviewdog/action-setup@v1
      with:
        reviewdog_version: latest
    - shell: bash
      run: |
        curl -OL https://github.com/aki77/lcov_to_checkstyle/releases/download/v0.3.0/lcov_to_checkstyle_v0.3.0_x86_64-unknown-linux-musl.zip
        unzip lcov_to_checkstyle_v0.3.0_x86_64-unknown-linux-musl.zip
    - name: Install lcov-util from crates.io
      uses: baptiste0928/cargo-install@91c5da15570085bcde6f4d7aed98cb82d6769fd3
      with:
        crate: lcov-util
        version: "0.2.1"
    - uses: aki77/delete-pr-comments-action@v2
      if: inputs.delete_previous_comments == 'true'
      with:
        bodyContains: "[${{ inputs.tool_name }}]"
        noReply: "true"
    - id: reviewdog
      env:
        REVIEWDOG_GITHUB_API_TOKEN: ${{ inputs.github_token }}
      run: |
        lcov-merge $(ls ${{ inputs.lcov_path }}) | \
          ./lcov_to_checkstyle | \
          reviewdog -f=checkstyle -name=${{ inputs.tool_name }} -reporter=${{ inputs.reporter }} \
            -fail-level=${{ inputs.fail_level }} -filter-mode=${{ inputs.filter_mode }}

      shell: bash
